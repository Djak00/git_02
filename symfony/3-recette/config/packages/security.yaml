security:
    # Hashage des mots de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Les sources d'utilisateurs (in_memory ou base de données)
    providers:
        users_in_memory:
            memory: null

        in_database:
            entity:
                class: App\Entity\Utilisateur
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: in_database

            form_login:
                login_path: connexion
                check_path: connexion

            logout:
                path: deconnexion
                target: affich_aliments

    # Contrôle d'accès aux URLs (facultatif ici)
    access_control:
        # Exemple : protéger une route admin
        - { path: ^/admin, roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
